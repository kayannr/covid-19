data_2020 <- filter(data_yearly, Year=="2020")
#data with aggregated covid-cases
data_2020_2022 <- data_yearly %>%
group_by(Country, Code, WHO_region) %>%
dplyr::summarize(New_cases = sum(New_cases, na.rm = TRUE),Face_cover = max(Face_cover,na.rm = TRUE), Vaccination = max(Vaccination,na.rm = TRUE), Internal_movement=max(Internal_movement,na.rm = TRUE), Stay_home= max(Stay_home,na.rm = TRUE),  International_travel=      max(International_travel,na.rm = TRUE), .groups = "keep") %>%
as.data.frame()
data_2020_2022$Year <- "2020-2022"
data_2020_2022 <- data_2020_2022[, c(1,2,3,10,4,5,6,7,8,9)]
#data with aggregated covid-cases grouped by region
data_regional <- data_2020_2022 %>%
group_by(WHO_region) %>%
dplyr::summarize(New_cases = sum(New_cases, na.rm = TRUE),Face_cover = max(Face_cover,na.rm = TRUE), Vaccination = max(Vaccination,na.rm = TRUE), Internal_movement=max(Internal_movement,na.rm = TRUE), Stay_home= max(Stay_home,na.rm = TRUE),  International_travel=      max(International_travel,na.rm = TRUE), .groups = "keep") %>%
as.data.frame()
#data with aggregated covid-cases grouped by region
data_regional <- data_2020_2022 %>%
group_by(WHO_region) %>%
dplyr::summarize(New_cases = sum(New_cases, na.rm = TRUE),Face_cover = max(Face_cover,na.rm = TRUE), Vaccination = max(Vaccination,na.rm = TRUE), Internal_movement=max(Internal_movement,na.rm = TRUE), Stay_home= max(Stay_home,na.rm = TRUE),  International_travel=      max(International_travel,na.rm = TRUE), .groups = "keep") %>%
as.data.frame()
#data with aggregated covid-cases grouped by policies
data_policies <- data_monthly %>%
group_by(Face_cover, Vaccination, Internal_movement, Stay_home, International_travel) %>%
dplyr::summarize(New_cases = sum(New_cases, na.rm = TRUE), .groups = "keep") %>%
as.data.frame()
#view summary
library(summarytools)
monthly_data <- data_monthly1[, -c(2,6)]
print(dfSummary(monthly_data), method="render")
library(dplyr)
d <- data_monthly %>%
group_by(Country) %>%
summarise(total = sum(New_cases, na.rm=T), mean = mean(New_cases, na.rm=T),median=median(New_cases, na.rm=T), maximum = max(New_cases, na.rm=T), minimum = min(New_cases, na.rm=T), IQR = IQR(New_cases, na.rm=T), quantile_25 = quantile(New_cases, na.rm=T, c(0.25)),quantile_75 = quantile(New_cases, na.rm=T, c(0.75)), .groups = "keep")
# display summary data
library(DT)
datatable(d, caption = htmltools::tags$caption(
style = 'caption-side: bottom; text-align: center;overflow: auto;position: relative;width : 100% !important;',
'Table 4: ', htmltools::em('Summary statistics of Monthly New Cases (2020-2022) grouped by Country'), rownames = FALSE,filter="top", options = list(pageLength = 10, autoWidth = T, scrollX=TRUE, scrollY=F, columnDefs = list(list(width = '3px', targets = "_all")))))
library(plotly)
p <- plot_ly(data_yearly,
x = ~Country,
y = ~New_cases,
sizes = c(10, 100),
marker = list(opacity = 0.7,
sizemode = 'diameter'))
p <- p %>% layout(title = 'Covid-19 Total New Cases by Country and Year',titlefont = list(
family = "Agency FB",
size = 22,
color = 'black') , font = list(family = "Agency FB", size = 12),
xaxis = list(title = ''),
yaxis = list(title = 'Total New Cases'), margin=0.5)
p <- add_markers(p,
size = ~New_cases,
color = ~WHO_region,
text = ~Country, hoverinfo = "text",
ids = ~Country,
frame = ~Year,
showlegend = TRUE)
p <- animation_opts(p,
frame = 1000,
transition = 800,
redraw = FALSE)
p <- animation_slider(p,
currentvalue = list(prefix = "Year "))
p
# widgetframe::frameWidget(p)
library(ggcorrplot)
d <- data_monthly[, c(3,9:13)]
corr_plot <- model.matrix(~0+., data=d) %>%
cor(use="pairwise.complete.obs") %>%
ggcorrplot(show.diag = F, type="lower", lab=TRUE, lab_size=2)
ggplotly(corr_plot)%>%layout(title ="Heatmap of the correlation matrix",
titlefont = list( family = "Agency FB",size = 26,color = 'black') ,
font = list(family = "Agency FB", size = 18),margin = 0.5, yaxis = list(tickfont =
list(size = 12),color = 'black',title = ""), xaxis = list(tickfont =
list(size = 12)))
# library
library(ggplot2)
library(plotly)
library(hrbrthemes)
data_monthly$main1 = "Face cover"
data_monthly$main2 = "Vaccination"
data_monthly$main3 = "Internal movement"
data_monthly$main4 = "International travel"
data_monthly$main5 = "Stay home"
data_monthly$main6 = "Region"
f0 <- data_monthly %>% ggplot(aes(WHO_region)) +
geom_histogram(stat="count", fill="cornflowerblue",alpha=0.5, col="white") + #+#FFBB00
labs(x="Region",y="Counts") +
geom_text(geom = "text",label="",x=3.5,y=90,col="black")+ facet_wrap(~main6) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1))
f1 <- data_monthly %>% ggplot(aes(Face_cover)) +
geom_histogram(stat="count", fill="#808000",alpha=0.5, col="white") + #+#FFBB00
labs(x="Face cover",y="Counts") +
geom_text(geom = "text",label="",x=3.5,y=90,col="black")+ facet_wrap(~main1) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1))
f2 <- data_monthly %>% ggplot(aes(Vaccination)) +
geom_histogram(stat="count",fill="sandybrown",alpha=0.5, col="white") +#+#FFBB00
labs(x="Vaccination",y="Counts") +
geom_text(geom = "text",label="",x=3.5,y=187.5,col="black")+ facet_wrap(~main2) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1))
f3 <- data_monthly %>% ggplot(aes(Internal_movement)) +
geom_histogram(stat="count",fill="#404080",alpha=0.3, col="white") + #+#FFBB00
labs(x="Internal movement",y="Counts") +
geom_text(geom = "text",label="",x=3.5,y=68,col="black")+ facet_wrap(~main3) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1))
f4 <- data_monthly %>% ggplot(aes(International_travel)) +
geom_histogram(stat="count",fill="#69b3a2",alpha=0.5, col="white") + #+#FFBB00
labs(x="International travel",y="Counts") +
geom_text(geom = "text",label="",x=3.5,y=68,col="black")+ facet_wrap(~main4) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1))
f5 <- data_monthly %>% ggplot(aes(Stay_home)) +
geom_histogram(stat="count",fill="lightsteelblue4",alpha=0.5, col="white") + #+#FFBB00
labs(x="Stay home",y="Counts") +
geom_text(geom = "text",label="",x=0.5,y=1800,col="black")+ facet_wrap(~main5) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1))
subplot(f0, f2, f3,f1 ,f4,f5, shareY = T, nrows = 1,heights =1, margin=0.005)%>% layout(title ="Histogram of Factors", titlefont = list(
family = "Agency FB",
size = 26,
color = 'black') , font = list(family = "Agency FB", size = 15),margin = 0.5, yaxis = list(
color = 'black',
title = "Count"))
F0<- ggplot(data = data_monthly, aes(y=New_cases,x=as.factor(WHO_region),color="grey"))+
# ggplot(Wage, aes(occupation,wage,fill=occupation))+ #to leave them alphabetic
geom_jitter(colour = "dark gray",alpha =0.5, width=.1, size=0.5) +
stat_boxplot(geom ='errorbar',width = 0.05, color="black") +
geom_boxplot(fill="cornflowerblue", color="black", alpha=0.8)+
labs(title="",
x = "Region",
y = "Monthly Covid-19 Cases",
#subtitle ="Gray dots=sample data points, Black dot=outlier, Blue dot=mean, Red=99% confidence interval",
caption = "") +
guides(fill=FALSE) +
#stat_summary(fun.data = "mean_cl_normal", colour = "red", size = 1.5, fun.args = list(conf.int=.99)) +
stat_summary(geom="point", fun.y=mean, color="red")+ facet_wrap(~main6) +
theme(text = element_text(size=10), axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1)) +
scale_y_log10()
F1<-data_monthly %>% ggplot(aes(y=New_cases,x=as.factor(Face_cover),color="grey"))+
# ggplot(Wage, aes(occupation,wage,fill=occupation))+ #to leave them alphabetic
geom_jitter(colour = "dark gray",alpha =0.5, width=.1, size=0.5) +
stat_boxplot(geom ='errorbar',width = 0.05, color="black") +
geom_boxplot(fill="#808000", color="black", alpha=0.8)+
labs(title="",
x = "Face cover",
y = "Monthly Covid-19 Cases",
#subtitle ="Gray dots=sample data points, Black dot=outlier, Blue dot=mean, Red=99% confidence interval",
caption = "") +
guides(fill=FALSE) +
#stat_summary(fun.data = "mean_cl_normal", colour = "red", size = 1.5, fun.args = list(conf.int=.99)) +
stat_summary(geom="point", fun.y=mean, color="red")+ facet_wrap(~main1) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1)) +
scale_y_log10()
F2 <- data_monthly %>% ggplot( aes(y=New_cases,x=as.factor(Vaccination),color="grey"))+
# ggplot(Wage, aes(occupation,wage,fill=occupation))+ #to leave them alphabetic
geom_jitter(colour = "dark gray",alpha =0.5, width=.1, size=0.5) +
stat_boxplot(geom ='errorbar',width = 0.05, color="black") +
geom_boxplot(fill="sandybrown", color="black", alpha=0.8)+
labs(title="",
x = "Vaccination",
y = "Monthly Covid-19 Cases",
#subtitle ="Gray dots=sample data points, Black dot=outlier, Blue dot=mean, Red=99% confidence interval",
caption = "") +
guides(fill=FALSE) +
#stat_summary(fun.data = "mean_cl_normal", colour = "red", size = 1.5, fun.args = list(conf.int=.99)) +
stat_summary(geom="point", fun.y=mean, color="red")+ facet_wrap(~main2) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1)) +
scale_y_log10()
F3 <- data_monthly %>% ggplot( aes(y=New_cases,x=as.factor(Internal_movement),color="grey"))+
# ggplot(Wage, aes(occupation,wage,fill=occupation))+ #to leave them alphabetic
geom_jitter(colour = "dark gray",alpha =0.5, width=.1, size=0.5) +
stat_boxplot(geom ='errorbar',width = 0.05, color="black") +
geom_boxplot(fill="#404080", color="black", alpha=0.8)+
labs(title="",
x = "Internal movement",
y = "Monthly Covid-19 Cases",
#subtitle ="Gray dots=sample data points, Black dot=outlier, Blue dot=mean, Red=99% confidence interval",
caption = "") +
guides(fill=FALSE) +
#stat_summary(fun.data = "mean_cl_normal", colour = "red", size = 1.5, fun.args = list(conf.int=.99)) +
stat_summary(geom="point", fun.y=mean, color="red")+ facet_wrap(~main3) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1)) +
scale_y_log10()
F4 <- data_monthly %>% ggplot(aes(y=New_cases,x=as.factor(International_travel),color="grey"))+
# ggplot(Wage, aes(occupation,wage,fill=occupation))+ #to leave them alphabetic
geom_jitter(colour = "dark gray",alpha =0.5, width=.1, size=0.5) +
stat_boxplot(geom ='errorbar',width = 0.05, color="black") +
geom_boxplot(fill="#69b3a2", color="black", alpha=0.8)+
labs(title="",
x = "International travel",
y = "Monthly Covid-19 Cases",
#subtitle ="Gray dots=sample data points, Black dot=outlier, Blue dot=mean, Red=99% confidence interval",
caption = "") +
guides(fill=FALSE) +
#stat_summary(fun.data = "mean_cl_normal", colour = "red", size = 1.5, fun.args = list(conf.int=.99)) +
stat_summary(geom="point", fun.y=mean, color="red")+ facet_wrap(~main4) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1)) +
scale_y_log10()
F5 <- data_monthly %>% ggplot(aes(y=New_cases,x=as.factor(Stay_home),color="grey"))+
# ggplot(Wage, aes(occupation,wage,fill=occupation))+ #to leave them alphabetic
geom_jitter(colour = "dark gray",alpha =0.5,width=.1, size=0.5) +
stat_boxplot(geom ='errorbar',width = 0.05, color="black") +
geom_boxplot(fill="lightsteelblue4", color="black", alpha=0.8)+
labs(title="",
x = "Stay home",
y = "Monthly Covid-19 Cases",
#subtitle ="Gray dots=sample data points, Black dot=outlier, Blue dot=mean, Red=99% confidence interval",
caption = "") +
guides(fill=FALSE) +
#stat_summary(fun.data = "mean_cl_normal", colour = "red", size = 1.5, fun.args = list(conf.int=.99)) +
stat_summary(geom="point", fun.y=mean, color="red") +
facet_wrap(~main5) + theme(text = element_text(size=10),axis.text.x = element_text(angle = 90, vjust = 0.5,size=10, hjust=1)) +
scale_y_log10()
# subplot(f2, f3,f1 ,f4,f5, shareX = T,margin = 0.005, nrows=5)%>% layout(title ="Scatterplot of Covid-19 Cases and Policies", titlefont = list(
#            family = "Agency FB",
#            size = 12,
#            color = 'black'))
subplot(F0, F2, F3, F1, F4, F5, shareY = T, nrows = 1,  heights=1, margin=0.005)%>% layout(title ="Boxplot of Covid-19 and Policies", titlefont = list(
family = "Agency FB",
size = 26,
color = 'black') , font = list(family = "Agency FB", size = 18),margin = 0.5, yaxis = list(
color = 'black',
title = "Monthly Covid-19 Cases"))
# install.packages(c("FactoMineR", "factoextra"))
library("FactoMineR")
library("factoextra")
data_2020_2022[,c(3,6:10)] <- lapply(data_2020_2022[,c(3,6:10)], as.factor)
# sapply(data_2020_2022, class)
active <- data_2020_2022[, c(3,6:10)]
# number of categories per variable
n = apply(active, 2, function(x) nlevels(as.factor(x)))
# head(active[, 1:6], 3)
#perform MCA
mca <- MCA(active, graph = FALSE)
# print(mca)
# Eigenvalues / Variances
library("factoextra")
eig.val <- get_eigenvalue(mca)
fviz_screeplot(mca, addlabels = TRUE, ylim = c(0, 18))
# Biplot
# fviz_mca_biplot(mca,
#                repel = TRUE, # avoid text overlapping
#                ggtheme = theme_gray())
fviz_mca_biplot(mca, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE, # avoid text overlapping (slow)
ggtheme = theme_gray()
)
# Graph of variables
var <- get_mca_var(mca)
# Coordinates
# head(var$coord)
# # Cos2: quality on the factore map
# head(var$cos2)
# # Contributions to the principal components
# head(var$contrib)
fviz_mca_var(mca, choice = "mca.cor",
repel = TRUE, # Avoid text overlapping (slow)
ggtheme = theme_gray())
##Box-cox transformation
d<- data_monthly1[-1,c(3,7:12)]
fit1<-aov(New_cases~., data=d) #first-order model with the (non-transformed) variables
par(mfrow=c(2,2))
plot(fit1,pch =20, cex = 2, col = "cornflowerblue")
summary(fit1)
###The Box-Cox likelihood suggests a power transformation with power -0.02.
bc<-MASS::boxcox(fit1, lambda = seq(-4, 4, by = 0.01),plotit = T)
summary(fit1)
###The Box-Cox likelihood suggests a power transformation with power -0.02.
bc<-MASS::boxcox(fit1, plotit = T)
data_monthly2 <- data_monthly1
data_monthly2$New_cases <- log(data_monthly2$New_cases)
data_monthly2$New_cases[which(!is.finite(data_monthly2$New_cases))] <- 0 #replace inf val with 0 for log(0) = inf
d<- data_monthly2[-1,c(3,7:12)]
fit2<-aov(New_cases~., data=d)
###The Box-Cox likelihood suggests a power transformation with power -0.02.
bc<-MASS::boxcox(fit2, plotit = T)
##Box-cox transformation
d<- data_monthly1[-1,c(3,7:12)]
fit1<-aov(New_cases~., data=d) #first-order model with the (non-transformed) variables
summary(fit1)
par(mfrow=c(2,2))
plot(fit1,pch =20, cex = 2, col = "cornflowerblue")
d<- data_monthly2[-1,c(3,7:12)]
fit2<-aov(New_cases~., data=d)
plot(fit2,pch =20, cex = 2, col = "cornflowerblue")
###The Box-Cox likelihood suggests a power transformation with power -0.02.
#bc<-MASS::boxcox(fit2, plotit = T)
d<- data_monthly2[-1,c(3,7:12)]
fit2<-aov(New_cases~., data=d)
par(mfrow=c(2,2))
plot(fit2,pch =20, cex = 2, col = "cornflowerblue")
###The Box-Cox likelihood suggests a power transformation with power -0.02.
#bc<-MASS::boxcox(fit2, plotit = T)
d<- data_monthly2[-1,c(3,7:12)]
fit2<-aov(New_cases~., data=d)
par(mfrow=c(2,2))
plot(fit2,pch =20, cex = 2, col = "cornflowerblue")
###The Box-Cox likelihood suggests a power transformation with power -0.02.
bc<-MASS::boxcox(fit2)
d<- data_monthly2[-1,c(3,7:12)]
fit2<-aov(New_cases~., data=d)
par(mfrow=c(2,2))
plot(fit2,pch =20, cex = 2, col = "cornflowerblue")
###The Box-Cox likelihood suggests a power transformation with power -0.02.
#bc<-MASS::boxcox(fit2)
print(dfSummary(data_monthly2[, -c(2,6)]), method="render")
df_filtered <- subset(data_monthly2, New_cases != 0)
print(dfSummary(df_filtered[, -c(2,6)]), method="render")
d<- df_filtered[-1,c(3,7:12)]
fit2<-aov(New_cases~., data=d)
par(mfrow=c(2,2))
plot(fit2,pch =20, cex = 2, col = "cornflowerblue")
###The Box-Cox likelihood suggests a power transformation with power -0.02.
#bc<-MASS::boxcox(fit2)
d<- df_filtered[-1,c(3,7:12)]
fit2<-aov(New_cases~., data=d)
par(mfrow=c(2,2))
plot(fit2,pch =20, cex = 2, col = "cornflowerblue")
###The Box-Cox likelihood suggests a power transformation with power -0.02.
bc<-MASS::boxcox(fit2)
library(ggplot2)
library(plotly)
f2 <- ggplot(data_monthly1, aes(x = New_cases)) + xlab("Histogram of New_cases") +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly1$New_cases),
sd = sd(data_monthly1$New_cases)),
col = "grey40",
size = 0.5)+labs(x="Histogram of New_cases")
f4 <- ggplot(data_monthly1, aes(x = log(data_monthly1$New_cases))) +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(log(data_monthly1$New_cases)),
sd = sd(log(data_monthly1$New_cases))),
col = "grey40",
size = 1)+labs(x="Histogram of log(New_cases)")
plotly::subplot(f2, f4, nrows=1, shareX=F, shareY=F, margin =0.02,titleX = TRUE)%>% layout(title ="Log Transformation", titlefont = list(
family = "Agency FB",
size = 26,
color = 'black') , font = list(family = "Agency FB", size = 18),margin = 0.1, yaxis = list(
color = 'black'))
library(ggplot2)
library(plotly)
f2 <- ggplot(data_monthly1, aes(x = New_cases)) + xlab("Histogram of New_cases") +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly1$New_cases),
sd = sd(data_monthly1$New_cases)),
col = "grey40",
size = 0.5)+labs(x="Histogram of New_cases")
f4 <- ggplot(data_monthly1, aes(x = data_monthly2$New_cases)) +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(log(data_monthly1$New_cases)),
sd = sd(log(data_monthly1$New_cases))),
col = "grey40",
size = 1)+labs(x="Histogram of log(New_cases)")
plotly::subplot(f2, f4, nrows=1, shareX=F, shareY=F, margin =0.02,titleX = TRUE)%>% layout(title ="Log Transformation", titlefont = list(
family = "Agency FB",
size = 26,
color = 'black') , font = list(family = "Agency FB", size = 18),margin = 0.1, yaxis = list(
color = 'black'))
library(ggplot2)
library(plotly)
f2 <- ggplot(data_monthly1, aes(x = New_cases)) + xlab("Histogram of New_cases") +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly1$New_cases),
sd = sd(data_monthly1$New_cases)),
col = "grey40",
size = 0.5)+labs(x="Histogram of New_cases")
f4 <- ggplot(data_monthly2, aes(x = data_monthly2$New_cases)) +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly2$New_cases),
sd = sd(data_monthly2$New_cases)),
col = "grey40",
size = 1)+labs(x="Histogram of log(New_cases)")
plotly::subplot(f2, f4, nrows=1, shareX=F, shareY=F, margin =0.02,titleX = TRUE)%>% layout(title ="Log Transformation", titlefont = list(
family = "Agency FB",
size = 26,
color = 'black') , font = list(family = "Agency FB", size = 18),margin = 0.1, yaxis = list(
color = 'black'))
data_monthly2 <- data_monthly1
data_monthly2$New_cases <- log(data_monthly2$New_cases)
data_monthly2$New_cases[which(!is.finite(data_monthly2$New_cases))] <- 0 #replace inf val with 0 for log(0) = inf
print(dfSummary(data_monthly2), method="render")
library(ggplot2)
library(plotly)
f2 <- ggplot(data_monthly1, aes(x = New_cases)) + xlab("Histogram of New_cases") +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly1$New_cases),
sd = sd(data_monthly1$New_cases)),
col = "grey40",
size = 0.5)+labs(x="Histogram of New_cases")
f4 <- ggplot(data_monthly2, aes(x = data_monthly2_f$New_cases)) +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly2_f$New_cases),
sd = sd(data_monthly2_f$New_cases)),
col = "grey40",
size = 1)+labs(x="Histogram of log(New_cases)")
data_monthly2 <- data_monthly1
data_monthly2$New_cases <- log(data_monthly2$New_cases)
data_monthly2$New_cases[which(!is.finite(data_monthly2$New_cases))] <- 0 #replace inf val with 0 for log(0) = inf
data_monthly2_f<- subset(data_monthly2, New_cases != 0)
library(ggplot2)
library(plotly)
f2 <- ggplot(data_monthly1, aes(x = New_cases)) + xlab("Histogram of New_cases") +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly1$New_cases),
sd = sd(data_monthly1$New_cases)),
col = "grey40",
size = 0.5)+labs(x="Histogram of New_cases")
f4 <- ggplot(data_monthly2, aes(x = data_monthly2_f$New_cases)) +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly2_f$New_cases),
sd = sd(data_monthly2_f$New_cases)),
col = "grey40",
size = 1)+labs(x="Histogram of log(New_cases)")
plotly::subplot(f2, f4, nrows=1, shareX=F, shareY=F, margin =0.02,titleX = TRUE)%>% layout(title ="Log Transformation", titlefont = list(
family = "Agency FB",
size = 26,
color = 'black') , font = list(family = "Agency FB", size = 18),margin = 0.1, yaxis = list(
color = 'black'))
library(ggplot2)
library(plotly)
f2 <- ggplot(data_monthly1, aes(x = New_cases)) + xlab("Histogram of New_cases") +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly1$New_cases),
sd = sd(data_monthly1$New_cases)),
col = "grey40",
size = 0.5)+labs(x="Histogram of New_cases")
f4 <- ggplot(data_monthly2_f, aes(x = data_monthly2_f$New_cases)) +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly2_f$New_cases),
sd = sd(data_monthly2_f$New_cases)),
col = "grey40",
size = 1)+labs(x="Histogram of log(New_cases)")
plotly::subplot(f2, f4, nrows=1, shareX=F, shareY=F, margin =0.02,titleX = TRUE)%>% layout(title ="Log Transformation", titlefont = list(
family = "Agency FB",
size = 26,
color = 'black') , font = list(family = "Agency FB", size = 18),margin = 0.1, yaxis = list(
color = 'black'))
data_monthly2 <- data_monthly1
data_monthly2$New_cases <- log(data_monthly2$New_cases)
data_monthly2$New_cases[which(!is.finite(data_monthly2$New_cases))] <- 0 #replace inf val with 0 for log(0) = inf
data_monthly2_f<- subset(data_monthly2, New_cases != 0) #exclude 0s
print(dfSummary(data_monthly2_f), method="render")
library(ggplot2)
library(plotly)
f2 <- ggplot(data_monthly1, aes(x = New_cases)) + xlab("Histogram of New_cases") +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
stat_function(fun = dnorm,
args = list(mean = mean(data_monthly1$New_cases),
sd = sd(data_monthly1$New_cases)),
col = "grey40",
size = 0.5)+labs(x="Histogram of New_cases")
f4 <- ggplot(data_monthly2_f, aes(x = data_monthly2_f$New_cases)) +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
# stat_function(fun = dnorm,
# args = list(mean = mean(data_monthly2_f$New_cases),
#             sd = sd(data_monthly2_f$New_cases)),
# col = "grey40",
# size = 1)+
labs(x="Histogram of log(New_cases)")
plotly::subplot(f2, f4, nrows=1, shareX=F, shareY=F, margin =0.02,titleX = TRUE)%>% layout(title ="Log Transformation", titlefont = list(
family = "Agency FB",
size = 26,
color = 'black') , font = list(family = "Agency FB", size = 18),margin = 0.1, yaxis = list(
color = 'black'))
library(ggplot2)
library(plotly)
f2 <- ggplot(data_monthly1, aes(x = New_cases)) + xlab("Histogram of New_cases") +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
# stat_function(fun = dnorm,
# args = list(mean = mean(data_monthly1$New_cases),
#             sd = sd(data_monthly1$New_cases)),
# col = "grey40",
# size = 0.5)+
labs(x="Histogram of New_cases")
f4 <- ggplot(data_monthly2_f, aes(x = data_monthly2_f$New_cases)) +
geom_histogram(aes(y = ..density..),bins = 30, fill = "#69b3a2", color = "white",alpha=0.8) +
# stat_function(fun = dnorm,
# args = list(mean = mean(data_monthly2_f$New_cases),
#             sd = sd(data_monthly2_f$New_cases)),
# col = "grey40",
# size = 1)+
labs(x="Histogram of log(New_cases)")
plotly::subplot(f2, f4, nrows=1, shareX=F, shareY=F, margin =0.02,titleX = TRUE)%>% layout(title ="Log Transformation", titlefont = list(
family = "Agency FB",
size = 26,
color = 'black') , font = list(family = "Agency FB", size = 18),margin = 0.1, yaxis = list(
color = 'black'))
d<- data_monthly2_f[-1,c(3,7:12)]
fit2<-aov(New_cases~., data=d)
par(mfrow=c(2,2))
plot(fit2,pch =20, cex = 2, col = "cornflowerblue")
###The Box-Cox likelihood suggests a power transformation with power -0.02.
bc<-MASS::boxcox(fit2)
data_monthly2_f$WHO_region <- as.factor(data_monthly2_f$WHO_region)
reduced_mod=aov(New_cases~Face_cover+Vaccination+Internal_movement+Stay_home+International_travel+WHO_region, data=data_monthly2_f)
summary(reduced_mod)
d<- data_monthly2_f[-1,c(3,7:12)]
fit2<-aov(New_cases~., data=d)
summary(fit1)
par(mfrow=c(2,2))
plot(fit2,pch =20, cex = 2, col = "cornflowerblue")
library(rstatix)
res.aov <- anova_test(New_cases~Face_cover+Vaccination+Internal_movement+Stay_home+International_travel+WHO_region, data=data_monthly2_f)
res.aov
# Test for interactions
# library(gtsummary)
full_mod=aov(New_cases~(Face_cover+Vaccination+Internal_movement+Stay_home+International_travel+WHO_region)^2,data=data_monthly2_f)
summary(full_mod)
# tbl_regression(full_mod)
# sapply(data_monthly1, class)
reduced_mod=aov(New_cases~Face_cover+Vaccination+Internal_movement+Stay_home+International_travel+WHO_region, data=data_monthly2_f)
anova(reduced_mod,full_mod)
